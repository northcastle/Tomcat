1.启动流程
   这一节就是听了听视频，每个组件依次启动。
   
   父组件会初始化自己，并且调用子组件的初始化方法。
   
   
   1.1 启动tomcat，需要调用 bin/startup.bat(bin/startup.sh),再startup.bat脚本中调用了catalina.bat.
   1.2 再catalina.bat脚本中，调用了BootStrap中的main方法。
   1.3 在BootStrap 的main方法中，调用了init方法，来船舰Catalina以及 初始化类加载器。
   1.4 在BootStrap 的main方法中，调用了load方法，在其中又调用了Catalina的load方法。
   1.5 在Catalina的load方法中，需要进行一些初始化的工作，并需要狗仔Digester对象，用于解析XML.
   1.6 然后再调用后续组件的初始化操作。。。
   
   总结一句话 ： 加载Tomcat配置文件，初始化容器组件，监听对应的端口号，准备接收客户端请求。
   
2.原码解析
  2.1 Lifecycle
      由于所有的组件均存在 初始化、启动、停止等生命周期方法，拥有生命周期管理的特性，
      所以Tomcat在设计的时候，基于生命周期管理抽象成了一个接口，
      而组件，server，service，container，executor，connector 等 ，都实现了一个生命周期接口，
      从而，就有了一下生命周期中的核心方法：
            2.1.1 init（） ： 初始化组件
            2.1.2 start（）：启动组件
            2.1.3 stop（）：停止组件
            2.1.4 destroy（）：销毁组件
            
   2.2 各组件的默认实现
       上面我们提到的server,service,engine,host,context 都是接口，下面罗列了这些接口的默认实现：
       server -- standardserver
       service -- standardservice
       engine -- standardengine
       host -- standardhost
       context -- standardcontext
       
       在tomcat中没有对应的endpoint接口，但是有一个抽象类AbstractEndPoint ,有三个实现类 ： 
       NioEndpoint : NIO 模型
       Nio2Endpoint: NIO2 模型
       AprEndpoint: APR 模型
       
       默认采用的时NioEndpoint。
