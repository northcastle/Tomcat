1.配置安全
  1.1 删除webapps目录下的所有文件，禁用tomcat管理界面；
  1.2 注释或删除tomcat-user.xml文件内的所有用户权限；
  1.3 更改关闭tomcat的指令或禁用：
      tomcat的server.xml中定义了可以直接关闭tomcat实例的管理端口（默认8005）.
      可以通过telnet连接上该端口之后，输入SHUTDOWN(默认的关闭命令)即可关闭Tomcat实例（注意，此时虽然实例关闭了，但是进程还是存在的）。
      
      方案一 ： 更改端口号和指令
               <Server port="8025" shutdown="whc_shut">
      方案二 ： 禁用8005端口
               <Server port="-1" shutdown="SHUTDOWN">
   1.4 在webapps/ROOT 目录下定义错误页面 404.html 500.html
        然后在web.xml中进行配置
        提高了用户的用户体验
        
  2.应用安全
    在大部分的web应用中，特别是一些后台应用系统，都会实现自己的安全模块管理（权限模块），用于控制应用系统的安全访问，
    基本包含两个部分，认证（登陆和单点登录）和授权（功能授权，数据授权）。对于当前的业务系统，可以自己做一套适用于自己业务系统的权限模块，
    也有很多的应用系统直接使用一些功能完善的安全框架，将其集成到我们的web应用中，如SpringSevurity、Apache Shiro等。
    
  3.传输安全 
    3.1 HTTPS
        HTTPS 的全程是 超文本传输安全协议（Hypertext Transfer Protocol Secure）,是一种网络安全传输协议。
        在HTTP的基础上加入SSL/TLS来进行数据加密，保护交换数据不被泄露、窃取。
        
        SSL 和 TLS 是用于网络通信安全的加密协议，它允许客户端和服务器之间通过安全连接通信。SSL 协议的三个特性：
        * 保密 ： 通过SSL 链接传输的数据是加密的；
        * 鉴别 ： 通信双方的身份鉴别，通常是可选的，但至少有一方那个需要验证；
        * 完整性 ： 传输数据的完整性检查。
        
        从性能角度考虑，加密解密是一项计算昂贵的处理，因此尽量不要将整个web应用采用SSL链接，实际部署过程中，
        选择有必要进行安全加密的页面（存在敏感信息传输的页面）采用SSL通信。
        
        
        HTTPS 和 HTTP 的区别主要为一下四点 ：
        1.HTTPS 协议 需要到证书颁发机构CA申请SSL证书，然后与域名进行绑定，HTTP不用申请证书；
        2.HTTP 是超文本传输协议，属于应用层信息传输，HTTPS 则是具有SSL加密安全性传输协议，对苏剧的传输进行加密，相当于HTTP的升级版；
        3.HTTP和HTTPS 使用的是完全不同的链接方式，用的端口也不一样，前者是 8080，后者是 8443；
        4.HTTP 的链接很简单，是无状态的；HTTPS 是由SSL+HTTP协议构建的可进行加密传输、身份认证的网络协议，比HTTP协议安全。
        
        
  4.Tomcat 堆 HTTPS 的支持
    4.1 生成 密钥库文件 ：
        keytool -genkey -alias tomcat -keyalg RSA -keystore tomcatkey.keystore
        输入对应的密钥库密码 等信息 之后，就会在当前文件夹中出现一个密钥库文件 tomcatkey.keystore
        
    4.2 将密钥库文件 tomcatkey.keystore 复制到tomcat/conf 目录下
    
    4.3 配置tomcat/conf/server.xml
         <Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol" maxThreads="150" secure="true" SSLEnabled="true">
              <SSLHostConfig certificateVerification="false">
                  <Certificate certificateKeystoreFile="conf/tomcatkey.keystore" certificateKeystorePassword="whc" type="RSA" />
              </SSLHostConfig>
         </Connector>
